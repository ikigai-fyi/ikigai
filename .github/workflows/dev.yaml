on:
  push:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      APP_CONFIG: "sqlite_testing"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Setup pipenv
        run: pip install pipenv && pipenv sync --dev
      - name: Run pre-commit
        run: pipenv run pre-commit run --all-files
      - name: Run migrations
        run: pipenv run flask db upgrade head
      - name: Run tests
        run: pipenv run pytest --cov=app --cov-report=xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  deploy-dev:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'
    environment: dev
    env:
      APP_CONFIG: "dev"
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      SQLALCHEMY_DATABASE_URI: ${{ secrets.SQLALCHEMY_DATABASE_URI }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      STRAVA_CLIENT_SECRET: ${{ secrets.STRAVA_CLIENT_SECRET }}
      STRAVA_PAUL_REFRESH_TOKEN: ${{ secrets.STRAVA_PAUL_REFRESH_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Setup pipenv
        run: pip install pipenv && pipenv sync
      - name: Create AWS configuration file
        run: |
          mkdir ~/.aws/
          printf "[profile icloud]\nregion=eu-west-1\noutput=json" > ~/.aws/config
          printf "[icloud]\naws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID_PAUL }}\naws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY_PAUL }}" > ~/.aws/credentials
      - name: Get Github actions IP
        id: ip
        uses: haythem/public-ip@v1.3
      - name: Add Github actions IP to db security group
        id: authorize_runner
        run: |
          aws ec2 authorize-security-group-ingress --profile icloud --group-id sg-09604b54a891618b8 --protocol tcp --port 5432 --cidr ${{ steps.ip.outputs.ipv4 }}/32
          echo "exit_code=$?" >> $GITHUB_OUTPUT
      - name: Create Zappa configuration file
        run: envsubst < zappa_settings.template.json > zappa_settings.json
      - name: Apply database migrations
        run: pipenv run flask db upgrade head
      - name: Update Zappa deployment
        run: pipenv run zappa update dev
      - name: Revoke Github actions IP to db security group
        if: ${{ steps.authorize_runner.outputs.exit_code }} == 0
        run: aws ec2 revoke-security-group-ingress --profile icloud --group-id sg-09604b54a891618b8 --protocol tcp --port 5432 --cidr ${{ steps.ip.outputs.ipv4 }}/32 